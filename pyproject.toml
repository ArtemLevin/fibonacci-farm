[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "your-package-name"
version = "0.1.0"  # или dynamic через setuptools-scm
description = "Short summary"
readme = { file = "README.md", content-type = "text/markdown" }
requires-python = ">=3.11"
license = { file = "LICENSE" }
authors = [{ name = "Your Team" }]
keywords = ["fastapi","async","sqlalchemy"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Framework :: FastAPI",
  "Typing :: Typed",
]

dependencies = [
  "fastapi>=0.110,<1.0",
  "pydantic[email]>=2.5,<3.0",
  "SQLAlchemy>=2.0,<3.0",
  "alembic>=1.13,<2.0",
  "httpx>=0.26,<1.0",
  "uvloop>=0.19; platform_system == 'Linux'",
]

[project.optional-dependencies]
dev = [
  "pytest>=8,<9",
  "pytest-asyncio>=0.23,<1.0",
  "pytest-cov>=5,<6",
  "black>=24,<25",
  "ruff>=0.5,<1.0",
  "mypy>=1.10,<2.0",
  "pre-commit>=3.7,<4.0",
]
postgres = ["asyncpg>=0.28,<1.0"]

[project.scripts]
yourcli = "your_package.cli:main"

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests*", "docs*"]

[tool.setuptools]
package-data = { your_package = ["py.typed", "templates/*.html", "static/*"] }

[tool.pytest.ini_options]
addopts = "-ra -q --cov=your_package --cov-report=term-missing"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
target-version = "py311"
line-length = 100
src = ["src", "tests"]

[tool.ruff.lint]
select = ["E","F","I","UP","B","ASYNC","S"]
ignore = ["E203"]

[tool.ruff.format]
quote-style = "preserve"
indent-style = "space"
docstring-code-format = true

[tool.mypy]
python_version = "3.11"
plugins = ["pydantic.mypy"]
strict = true
warn_unused_ignores = true
warn_redundant_casts = true
disallow_untyped_defs = true
no_implicit_optional = true
